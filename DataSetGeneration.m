    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                 %
%     Generates data for CNN      %
%                                 %
% leonel.m.carvalho@inesctec.pt   %
%                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clear all;
close all;
clc;

warning('off','all');

addpath(genpath(pwd));
define_constants;


%% Import data 

%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: C:\Users\Leonel Carvalho\Desktop\Daniel Schlickmann\matpower7.1\carga_anual.csv
%
% Auto-generated by MATLAB on 24-Jul-2022 11:58:41

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 1);

% Specify range and delimiter
opts.DataLines = [1, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = "VarName1";
opts.VariableTypes = "double";

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
carga_anual = readtable("carga_anual.csv", opts);

%% Convert to output type
carga_anual = table2array(carga_anual);
carga_anual(isnan(carga_anual)) = [];

%% Convert to hourly resolution
time = [datetime(2021,1,1,0,0,0):minutes(30):datetime(2021,12,31,23,30,0)]';
TT1 = timetable(time,carga_anual);
dt = minutes(60);
TT1 = retime(TT1,'regular','linear','TimeStep',dt);
carga_anual = TT1.carga_anual;
carga_anual = carga_anual(1:end-1,1);

%% Clear temporary variables
clear opts


%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: C:\Users\Leonel Carvalho\Desktop\Daniel Schlickmann\matpower7.1\solar_anual.csv
%
% Auto-generated by MATLAB on 24-Jul-2022 12:05:48

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 1);

% Specify range and delimiter
opts.DataLines = [1, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = "VarName1";
opts.VariableTypes = "double";

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
solar_anual = readtable("solar_anual.csv", opts);

%% Convert to output type
solar_anual = table2array(solar_anual);
solar_anual(isnan(solar_anual)) = [];


%% Clear temporary variables
clear opts


%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: C:\Users\Leonel Carvalho\Desktop\Daniel Schlickmann\matpower7.1\eolica_anual.csv
%
% Auto-generated by MATLAB on 24-Jul-2022 12:11:38

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 2);

% Specify range and delimiter
opts.DataLines = [1, Inf];
opts.Delimiter = ";";

% Specify column names and types
opts.VariableNames = ["VarName1", "VarName2"];
opts.VariableTypes = ["double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
eolica_anual = readtable("eolica_anual.csv", opts);

%% Convert to output type
eolica_anual = table2array(eolica_anual);

eolica_anual_1 = eolica_anual(:,1);
eolica_anual_2 = eolica_anual(:,2);

%% Clear temporary variables
clear opts

%% AC Load Flow %% 

% Define case
net_ori = loadcase('case24_ieee_rts.m');

%% Modify case
net_ori.gen(34,GEN_BUS) = 6; % parque eólico 1
net_ori.gen(35,GEN_BUS) = 8; % parque eólico 2
net_net_oripf.gen(36,GEN_BUS) = 4; % parque solar 

net_ori.gen(34,PMAX) = 1200; % parque eólico 1
net_ori.gen(35,PMAX) = 1000; % parque eólico 2
net_ori.gen(36,PMAX) = 800; % parque solar
net_ori.gen(34,QMAX) = net_ori.gen(34,PMAX) * 0.8; % parque eólico 1
net_ori.gen(35,QMAX) = net_ori.gen(35,PMAX) * 0.8; % parque eólico 2
net_ori.gen(36,QMAX) = net_ori.gen(36,PMAX) * 0.8; % parque solar 
net_ori.gen(34,QMIN) = -net_ori.gen(34,QMAX); % parque eólico 1
net_ori.gen(35,QMIN) = -net_ori.gen(35,QMAX); % parque eólico 2
net_ori.gen(36,QMIN) = -net_ori.gen(36,QMAX); % parque solar

%% Run case
mpopt = mpoption('model','AC', 'out.all', 0);
net_pf = runopf(net_ori,mpopt);


%% Run case for the whole year
n_tt= 8760; %% number of hours in the year

% - voltage mangitude at bus 11
- voltage mangitude at bus 12
% - voltage mangitude at bus 24
% - active power flow at bus 11
% - active power flow at bus 12
% - active power flow at bus 24
% - reactive power flow at bus 11
% - reactive power flow at bus 12
% - reactive power flow at bus 24
output_data_nn = zeros( n_tt, 9 );

% - total load in 138 kV system
% - total wind farm in 138 kV system
% - total solar in 138 kV system
% - status generators in 230 kV system
% - status transmission lines in 230 kV system
index_gen = 16:1:33;
index_trans_line = 18:1:38;
input_data_nn = zeros( n_tt, 3 + length(index_gen) + length(index_trans_line) );

for tt = 1 : n_tt
    net_pf = net_ori;
    net_pf.bus(:,PD) = net_pf.bus(:,PD) .* carga_anual( tt, 1 );
    net_pf.bus(:,QD) = net_pf.bus(:,QD) .* carga_anual( tt, 1 );
    net_pf.gen(34,PMAX) = net_pf.gen(34,PMAX) * eolica_anual_1(tt, 1); % parque eólico 1
    net_pf.gen(35,PMAX) = net_pf.gen(35,PMAX) * eolica_anual_2(tt, 1); % parque eólico 2
    net_pf.gen(36,PMAX) = net_pf.gen(36,PMAX) * solar_anual(tt, 1); % parque solar

    net_pf = runopf(net_pf,mpopt);
    
    output_data_nn( tt, 1 ) = net_pf.bus(11, VM);
    output_data_nn( tt, 2 ) = net_pf.bus(12, VM);
    output_data_nn( tt, 3 ) = net_pf.bus(24, VM);
    output_data_nn( tt, 4 ) = net_pf.branch(14, PT);
    output_data_nn( tt, 5 ) = net_pf.branch(17, PT);
    output_data_nn( tt, 6 ) = net_pf.branch(7, PT);
    output_data_nn( tt, 7 ) = net_pf.branch(17, QT);
    output_data_nn( tt, 8 ) = net_pf.branch(24, QT);
    output_data_nn( tt, 9 ) = net_pf.branch(7, QT);

    input_data_nn( tt, 1 ) = sum( net_pf.bus(1:10, PD) );
    input_data_nn( tt, 2 ) = net_pf.gen(34,PG) + net_pf.gen(35,PG);
    input_data_nn( tt, 3 ) = net_pf.gen(36,PG);
    
    input_data_nn( tt, 3+1:(3+length(index_gen)) ) = net_pf.gen(index_gen,GEN_STATUS)';
    input_data_nn( tt, (3+length(index_gen)+1):end ) = net_pf.branch(index_trans_line,BR_STATUS)';
end

% save data
writematrix(input_data_nn,'-input_data_nn.csv','Delimiter',';');
writematrix(output_data_nn,'-output_data_nn.csv','Delimiter',';');
